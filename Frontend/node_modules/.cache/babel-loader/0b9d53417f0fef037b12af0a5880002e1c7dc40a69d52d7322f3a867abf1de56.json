{"ast":null,"code":"var _jsxFileName = \"/Users/aravinth/Backendservice/Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskManager from './components/TaskManager'; // Import the TaskManager component\n\n// Static userId\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst userId = '66df023961c74851a7c06b5b'; // Replace with a valid user ID\n\nconst App = () => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Fetch tasks when the component loads\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Fetch tasks from backend API\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get(`http://localhost:9000/api/users/${userId}/tasks`);\n      setTasks(response.data); // Set the tasks from backend response\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Handle task submission (Add task)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title || !description) {\n      alert('Please fill out both fields');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:9000/api/tasks', {\n        title,\n        description,\n        userId // Send the userId with the task\n      });\n      setTasks([...tasks, response.data.task]); // Update task list\n      setTitle(''); // Clear form\n      setDescription(''); // Clear form\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this), \" - \", task.description]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TaskManager, {\n      userId: userId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"jpG6WDcXLRFi9utC4IUzi5M8u7U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","TaskManager","jsxDEV","_jsxDEV","userId","App","_s","tasks","setTasks","title","setTitle","description","setDescription","fetchTasks","response","get","data","error","console","handleSubmit","e","preventDefault","alert","post","task","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","length","map","_id","_c","$RefreshReg$"],"sources":["/Users/aravinth/Backendservice/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport TaskManager from './components/TaskManager'; // Import the TaskManager component\n\n// Static userId\nconst userId = '66df023961c74851a7c06b5b'; // Replace with a valid user ID\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Fetch tasks when the component loads\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Fetch tasks from backend API\n  const fetchTasks = async () => {\n    try {\n      const response = await axios.get(`http://localhost:9000/api/users/${userId}/tasks`);\n      setTasks(response.data); // Set the tasks from backend response\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Handle task submission (Add task)\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (!title || !description) {\n      alert('Please fill out both fields');\n      return;\n    }\n    try {\n      const response = await axios.post('http://localhost:9000/api/tasks', {\n        title,\n        description,\n        userId, // Send the userId with the task\n      });\n      setTasks([...tasks, response.data.task]); // Update task list\n      setTitle(''); // Clear form\n      setDescription(''); // Clear form\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Task Manager</h1>\n      <form onSubmit={handleSubmit}>\n        <h2>Add Task</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <button type=\"submit\">Add Task</button>\n      </form>\n\n      <h2>Tasks</h2>\n      {tasks.length > 0 ? (\n        <ul>\n          {tasks.map((task) => (\n            <li key={task._id}>\n              <strong>{task.title}</strong> - {task.description}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No tasks available.</p>\n      )}\n\n      {/* Task Manager Component Integration */}\n      <TaskManager userId={userId} />\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}