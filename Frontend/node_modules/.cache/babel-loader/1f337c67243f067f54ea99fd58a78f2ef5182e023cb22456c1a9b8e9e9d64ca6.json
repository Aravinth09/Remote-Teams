{"ast":null,"code":"var _jsxFileName = \"/Users/aravinth/Downloads/RemoteTeamusers/Frontend/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import CSS for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [notification, setNotification] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [users, setUsers] = useState([]); // State to hold users\n  const [selectedUser, setSelectedUser] = useState(''); // State for selected user to assign tasks\n  const [filterUser, setFilterUser] = useState(''); // State for filtering tasks by user\n\n  // Fetch tasks and users when the component loads\n  useEffect(() => {\n    fetchTasks();\n    fetchUsers(); // Fetch users for the dropdown\n  }, [filterUser]); // Re-fetch tasks if the user filter changes\n\n  // Function to fetch tasks from the API (with optional user filter)\n  const fetchTasks = async () => {\n    try {\n      let url = 'http://localhost:9000/api/tasks'; // Base URL for fetching tasks\n      if (filterUser) {\n        url += `?userId=${filterUser}`; // Append userId if filtering by user\n      }\n      const response = await axios.get(url);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      setNotification('Error fetching tasks.');\n    }\n  };\n\n  // Function to fetch users from the API\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:9000/api/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setNotification('Error fetching users.');\n    }\n  };\n\n  // Function to handle task submission (create or update)\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!title || !description || !dueDate || !selectedUser) {\n      alert('Please fill out all fields');\n      return;\n    }\n    try {\n      if (taskToEdit) {\n        // Update an existing task\n        const response = await axios.put(`http://localhost:9000/api/tasks/${taskToEdit._id}`, {\n          title,\n          description,\n          dueDate,\n          userId: selectedUser\n        });\n        setTasks(tasks.map(task => task._id === response.data._id ? response.data : task));\n        setTaskToEdit(null); // Reset edit state\n        setNotification('Task updated successfully.');\n      } else {\n        // Add a new task\n        const response = await axios.post('http://localhost:9000/api/tasks', {\n          title,\n          description,\n          dueDate,\n          userId: selectedUser\n        });\n        setTasks([...tasks, response.data]);\n        setNotification('Task added successfully.');\n      }\n\n      // Clear the form fields\n      setTitle('');\n      setDescription('');\n      setDueDate('');\n      setSelectedUser(''); // Clear selected user\n    } catch (error) {\n      console.error('Error adding/updating task:', error);\n      setNotification('Error adding/updating task.');\n    }\n  };\n\n  // Function to toggle task status (in-progress -> completed and vice versa)\n  const toggleTaskStatus = async task => {\n    try {\n      const newStatus = task.status === 'in-progress' ? 'completed' : 'in-progress';\n      const response = await axios.put(`http://localhost:9000/api/tasks/${task._id}/status`, {\n        status: newStatus\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}` // Assuming you're using token-based authentication\n        }\n      });\n      setTasks(tasks.map(t => t._id === task._id ? {\n        ...t,\n        status: newStatus\n      } : t));\n      setNotification('Task status updated successfully.');\n    } catch (error) {\n      console.error('Error updating task status:', error);\n      setNotification('Error updating task status.');\n    }\n  };\n\n  // Function to handle task edit (populate form fields with task details)\n  const handleEdit = task => {\n    setTaskToEdit(task); // Set the selected task for editing\n    setTitle(task.title);\n    setDescription(task.description);\n    setDueDate(task.dueDate);\n    setSelectedUser(task.user); // Assuming the task has a `user` field\n  };\n\n  // Function to handle task deletion\n  const handleDelete = async taskId => {\n    try {\n      await axios.delete(`http://localhost:9000/api/tasks/${taskId}`);\n      setTasks(tasks.filter(task => task._id !== taskId)); // Remove the deleted task from the list\n      setNotification('Task deleted successfully.');\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setNotification('Error deleting task.');\n    }\n  };\n\n  // Filter tasks by status\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'all') return true;\n    return task.status === filter;\n  });\n\n  // Search tasks by title (use safe check to avoid toLowerCase() on undefined titles)\n  const searchedTasks = filteredTasks.filter(task => {\n    var _task$title;\n    return (_task$title = task.title) === null || _task$title === void 0 ? void 0 : _task$title.toLowerCase().includes(searchTerm.toLowerCase());\n  });\n\n  // Function to format date\n  const formatDate = date => {\n    const options = {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric'\n    };\n    return new Date(date).toLocaleDateString(undefined, options);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Remote teams\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), notification && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"notification\",\n      children: notification\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: taskToEdit ? 'Edit Task' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        placeholder: \"Due Date\",\n        value: dueDate,\n        onChange: e => setDueDate(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedUser,\n        onChange: e => setSelectedUser(e.target.value),\n        required: true,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select a User\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user._id,\n          children: user.name\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: taskToEdit ? 'Update Task' : 'Add Task'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-filters\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Search by title\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filter,\n        onChange: e => setFilter(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"in-progress\",\n          children: \"In Progress\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"completed\",\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: filterUser,\n        onChange: e => setFilterUser(e.target.value) // Set filterUser when selected\n        ,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"All Users\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: user._id,\n          children: user.name\n        }, user._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), searchedTasks.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"task-list\",\n      children: searchedTasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"task-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 15\n        }, this), \" - \", task.description, \" - \", task.status, \" - Due: \", task.dueDate ? formatDate(task.dueDate) : 'N/A', /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => toggleTaskStatus(task),\n            children: [\"Mark as \", task.status === 'in-progress' ? 'Completed' : 'In Progress']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 233,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleEdit(task),\n            children: \"Edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(task._id),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 15\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"dDLdCg44jJzq02frm161dSstxVc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","App","_s","title","setTitle","description","setDescription","dueDate","setDueDate","tasks","setTasks","taskToEdit","setTaskToEdit","notification","setNotification","filter","setFilter","searchTerm","setSearchTerm","users","setUsers","selectedUser","setSelectedUser","filterUser","setFilterUser","fetchTasks","fetchUsers","url","response","get","data","error","console","handleSubmit","e","preventDefault","alert","put","_id","userId","map","task","post","toggleTaskStatus","newStatus","status","headers","localStorage","getItem","t","handleEdit","user","handleDelete","taskId","delete","filteredTasks","searchedTasks","_task$title","toLowerCase","includes","formatDate","date","options","year","month","day","Date","toLocaleDateString","undefined","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","name","length","onClick","_c","$RefreshReg$"],"sources":["/Users/aravinth/Downloads/RemoteTeamusers/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport './App.css'; // Import CSS for styling\n\nconst App = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [dueDate, setDueDate] = useState('');\n  const [tasks, setTasks] = useState([]);\n  const [taskToEdit, setTaskToEdit] = useState(null);\n  const [notification, setNotification] = useState('');\n  const [filter, setFilter] = useState('all');\n  const [searchTerm, setSearchTerm] = useState('');\n  const [users, setUsers] = useState([]); // State to hold users\n  const [selectedUser, setSelectedUser] = useState(''); // State for selected user to assign tasks\n  const [filterUser, setFilterUser] = useState(''); // State for filtering tasks by user\n\n  // Fetch tasks and users when the component loads\n  useEffect(() => {\n    fetchTasks();\n    fetchUsers(); // Fetch users for the dropdown\n  }, [filterUser]); // Re-fetch tasks if the user filter changes\n\n  // Function to fetch tasks from the API (with optional user filter)\n  const fetchTasks = async () => {\n    try {\n      let url = 'http://localhost:9000/api/tasks'; // Base URL for fetching tasks\n      if (filterUser) {\n        url += `?userId=${filterUser}`; // Append userId if filtering by user\n      }\n      const response = await axios.get(url);\n      setTasks(response.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      setNotification('Error fetching tasks.');\n    }\n  };\n\n  // Function to fetch users from the API\n  const fetchUsers = async () => {\n    try {\n      const response = await axios.get('http://localhost:9000/api/users');\n      setUsers(response.data);\n    } catch (error) {\n      console.error('Error fetching users:', error);\n      setNotification('Error fetching users.');\n    }\n  };\n\n  // Function to handle task submission (create or update)\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!title || !description || !dueDate || !selectedUser) {\n      alert('Please fill out all fields');\n      return;\n    }\n\n    try {\n      if (taskToEdit) {\n        // Update an existing task\n        const response = await axios.put(`http://localhost:9000/api/tasks/${taskToEdit._id}`, {\n          title,\n          description,\n          dueDate,\n          userId: selectedUser,\n        });\n        setTasks(tasks.map(task => task._id === response.data._id ? response.data : task));\n        setTaskToEdit(null); // Reset edit state\n        setNotification('Task updated successfully.');\n      } else {\n        // Add a new task\n        const response = await axios.post('http://localhost:9000/api/tasks', {\n          title,\n          description,\n          dueDate,\n          userId: selectedUser,\n        });\n        setTasks([...tasks, response.data]);\n        setNotification('Task added successfully.');\n      }\n\n      // Clear the form fields\n      setTitle('');\n      setDescription('');\n      setDueDate('');\n      setSelectedUser(''); // Clear selected user\n    } catch (error) {\n      console.error('Error adding/updating task:', error);\n      setNotification('Error adding/updating task.');\n    }\n  };\n\n  // Function to toggle task status (in-progress -> completed and vice versa)\n  const toggleTaskStatus = async (task) => {\n    try {\n      const newStatus = task.status === 'in-progress' ? 'completed' : 'in-progress';\n      const response = await axios.put(`http://localhost:9000/api/tasks/${task._id}/status`, {\n        status: newStatus,\n      }, {\n        headers: {\n          'Authorization': `Bearer ${localStorage.getItem('token')}`, // Assuming you're using token-based authentication\n        }\n      });\n      setTasks(tasks.map(t => t._id === task._id ? { ...t, status: newStatus } : t));\n      setNotification('Task status updated successfully.');\n    } catch (error) {\n      console.error('Error updating task status:', error);\n      setNotification('Error updating task status.');\n    }\n  };\n\n  // Function to handle task edit (populate form fields with task details)\n  const handleEdit = (task) => {\n    setTaskToEdit(task);  // Set the selected task for editing\n    setTitle(task.title);\n    setDescription(task.description);\n    setDueDate(task.dueDate);\n    setSelectedUser(task.user);  // Assuming the task has a `user` field\n  };\n\n  // Function to handle task deletion\n  const handleDelete = async (taskId) => {\n    try {\n      await axios.delete(`http://localhost:9000/api/tasks/${taskId}`);\n      setTasks(tasks.filter(task => task._id !== taskId));  // Remove the deleted task from the list\n      setNotification('Task deleted successfully.');\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setNotification('Error deleting task.');\n    }\n  };\n\n  // Filter tasks by status\n  const filteredTasks = tasks.filter(task => {\n    if (filter === 'all') return true;\n    return task.status === filter;\n  });\n\n  // Search tasks by title (use safe check to avoid toLowerCase() on undefined titles)\n  const searchedTasks = filteredTasks.filter(task =>\n    task.title?.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  // Function to format date\n  const formatDate = (date) => {\n    const options = { year: 'numeric', month: 'long', day: 'numeric' };\n    return new Date(date).toLocaleDateString(undefined, options);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Remote teams</h1>\n\n      {/* Notification */}\n      {notification && <div className=\"notification\">{notification}</div>}\n\n      {/* Task Form */}\n      <form onSubmit={handleSubmit}>\n        <h2>{taskToEdit ? 'Edit Task' : 'Add Task'}</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <input\n          type=\"date\"\n          placeholder=\"Due Date\"\n          value={dueDate}\n          onChange={(e) => setDueDate(e.target.value)}\n        />\n\n        {/* User dropdown to select who the task is assigned to */}\n        <select\n          value={selectedUser}\n          onChange={(e) => setSelectedUser(e.target.value)}\n          required\n        >\n          <option value=\"\">Select a User</option>\n          {users.map((user) => (\n            <option key={user._id} value={user._id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n\n        <button type=\"submit\">{taskToEdit ? 'Update Task' : 'Add Task'}</button>\n      </form>\n\n      {/* Task Filters */}\n      <div className=\"task-filters\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by title\"\n          value={searchTerm}\n          onChange={(e) => setSearchTerm(e.target.value)}\n        />\n        <select value={filter} onChange={(e) => setFilter(e.target.value)}>\n          <option value=\"all\">All</option>\n          <option value=\"in-progress\">In Progress</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n\n        {/* Filter tasks by user */}\n        <select\n          value={filterUser}\n          onChange={(e) => setFilterUser(e.target.value)} // Set filterUser when selected\n        >\n          <option value=\"\">All Users</option>\n          {users.map((user) => (\n            <option key={user._id} value={user._id}>\n              {user.name}\n            </option>\n          ))}\n        </select>\n      </div>\n\n      {/* Task List */}\n      <h2>Tasks</h2>\n      {searchedTasks.length > 0 ? (\n        <ul className=\"task-list\">\n          {searchedTasks.map((task) => (\n            <li key={task._id} className=\"task-item\">\n              <strong>{task.title}</strong> - {task.description} - {task.status} - Due: {task.dueDate ? formatDate(task.dueDate) : 'N/A'}\n              <div className=\"task-actions\">\n                <button onClick={() => toggleTaskStatus(task)}>\n                  Mark as {task.status === 'in-progress' ? 'Completed' : 'In Progress'}\n                </button>\n                <button onClick={() => handleEdit(task)}>Edit</button>\n                <button onClick={() => handleDelete(task._id)}>Delete</button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No tasks available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACS,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,UAAU,EAAEC,aAAa,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACiB,YAAY,EAAEC,eAAe,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACmB,MAAM,EAAEC,SAAS,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACqB,UAAU,EAAEC,aAAa,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACyB,YAAY,EAAEC,eAAe,CAAC,GAAG1B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACtD,MAAM,CAAC2B,UAAU,EAAEC,aAAa,CAAC,GAAG5B,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAElD;EACAC,SAAS,CAAC,MAAM;IACd4B,UAAU,CAAC,CAAC;IACZC,UAAU,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,EAAE,CAACH,UAAU,CAAC,CAAC,CAAC,CAAC;;EAElB;EACA,MAAME,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,IAAIE,GAAG,GAAG,iCAAiC,CAAC,CAAC;MAC7C,IAAIJ,UAAU,EAAE;QACdI,GAAG,IAAI,WAAWJ,UAAU,EAAE,CAAC,CAAC;MAClC;MACA,MAAMK,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAACF,GAAG,CAAC;MACrCjB,QAAQ,CAACkB,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CjB,eAAe,CAAC,uBAAuB,CAAC;IAC1C;EACF,CAAC;;EAED;EACA,MAAMY,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAME,QAAQ,GAAG,MAAM9B,KAAK,CAAC+B,GAAG,CAAC,iCAAiC,CAAC;MACnET,QAAQ,CAACQ,QAAQ,CAACE,IAAI,CAAC;IACzB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7CjB,eAAe,CAAC,uBAAuB,CAAC;IAC1C;EACF,CAAC;;EAED;EACA,MAAMmB,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAI,CAAChC,KAAK,IAAI,CAACE,WAAW,IAAI,CAACE,OAAO,IAAI,CAACc,YAAY,EAAE;MACvDe,KAAK,CAAC,4BAA4B,CAAC;MACnC;IACF;IAEA,IAAI;MACF,IAAIzB,UAAU,EAAE;QACd;QACA,MAAMiB,QAAQ,GAAG,MAAM9B,KAAK,CAACuC,GAAG,CAAC,mCAAmC1B,UAAU,CAAC2B,GAAG,EAAE,EAAE;UACpFnC,KAAK;UACLE,WAAW;UACXE,OAAO;UACPgC,MAAM,EAAElB;QACV,CAAC,CAAC;QACFX,QAAQ,CAACD,KAAK,CAAC+B,GAAG,CAACC,IAAI,IAAIA,IAAI,CAACH,GAAG,KAAKV,QAAQ,CAACE,IAAI,CAACQ,GAAG,GAAGV,QAAQ,CAACE,IAAI,GAAGW,IAAI,CAAC,CAAC;QAClF7B,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;QACrBE,eAAe,CAAC,4BAA4B,CAAC;MAC/C,CAAC,MAAM;QACL;QACA,MAAMc,QAAQ,GAAG,MAAM9B,KAAK,CAAC4C,IAAI,CAAC,iCAAiC,EAAE;UACnEvC,KAAK;UACLE,WAAW;UACXE,OAAO;UACPgC,MAAM,EAAElB;QACV,CAAC,CAAC;QACFX,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEmB,QAAQ,CAACE,IAAI,CAAC,CAAC;QACnChB,eAAe,CAAC,0BAA0B,CAAC;MAC7C;;MAEA;MACAV,QAAQ,CAAC,EAAE,CAAC;MACZE,cAAc,CAAC,EAAE,CAAC;MAClBE,UAAU,CAAC,EAAE,CAAC;MACdc,eAAe,CAAC,EAAE,CAAC,CAAC,CAAC;IACvB,CAAC,CAAC,OAAOS,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDjB,eAAe,CAAC,6BAA6B,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAM6B,gBAAgB,GAAG,MAAOF,IAAI,IAAK;IACvC,IAAI;MACF,MAAMG,SAAS,GAAGH,IAAI,CAACI,MAAM,KAAK,aAAa,GAAG,WAAW,GAAG,aAAa;MAC7E,MAAMjB,QAAQ,GAAG,MAAM9B,KAAK,CAACuC,GAAG,CAAC,mCAAmCI,IAAI,CAACH,GAAG,SAAS,EAAE;QACrFO,MAAM,EAAED;MACV,CAAC,EAAE;QACDE,OAAO,EAAE;UACP,eAAe,EAAE,UAAUC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAE,CAAE;QAC9D;MACF,CAAC,CAAC;MACFtC,QAAQ,CAACD,KAAK,CAAC+B,GAAG,CAACS,CAAC,IAAIA,CAAC,CAACX,GAAG,KAAKG,IAAI,CAACH,GAAG,GAAG;QAAE,GAAGW,CAAC;QAAEJ,MAAM,EAAED;MAAU,CAAC,GAAGK,CAAC,CAAC,CAAC;MAC9EnC,eAAe,CAAC,mCAAmC,CAAC;IACtD,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDjB,eAAe,CAAC,6BAA6B,CAAC;IAChD;EACF,CAAC;;EAED;EACA,MAAMoC,UAAU,GAAIT,IAAI,IAAK;IAC3B7B,aAAa,CAAC6B,IAAI,CAAC,CAAC,CAAE;IACtBrC,QAAQ,CAACqC,IAAI,CAACtC,KAAK,CAAC;IACpBG,cAAc,CAACmC,IAAI,CAACpC,WAAW,CAAC;IAChCG,UAAU,CAACiC,IAAI,CAAClC,OAAO,CAAC;IACxBe,eAAe,CAACmB,IAAI,CAACU,IAAI,CAAC,CAAC,CAAE;EAC/B,CAAC;;EAED;EACA,MAAMC,YAAY,GAAG,MAAOC,MAAM,IAAK;IACrC,IAAI;MACF,MAAMvD,KAAK,CAACwD,MAAM,CAAC,mCAAmCD,MAAM,EAAE,CAAC;MAC/D3C,QAAQ,CAACD,KAAK,CAACM,MAAM,CAAC0B,IAAI,IAAIA,IAAI,CAACH,GAAG,KAAKe,MAAM,CAAC,CAAC,CAAC,CAAE;MACtDvC,eAAe,CAAC,4BAA4B,CAAC;IAC/C,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC5CjB,eAAe,CAAC,sBAAsB,CAAC;IACzC;EACF,CAAC;;EAED;EACA,MAAMyC,aAAa,GAAG9C,KAAK,CAACM,MAAM,CAAC0B,IAAI,IAAI;IACzC,IAAI1B,MAAM,KAAK,KAAK,EAAE,OAAO,IAAI;IACjC,OAAO0B,IAAI,CAACI,MAAM,KAAK9B,MAAM;EAC/B,CAAC,CAAC;;EAEF;EACA,MAAMyC,aAAa,GAAGD,aAAa,CAACxC,MAAM,CAAC0B,IAAI;IAAA,IAAAgB,WAAA;IAAA,QAAAA,WAAA,GAC7ChB,IAAI,CAACtC,KAAK,cAAAsD,WAAA,uBAAVA,WAAA,CAAYC,WAAW,CAAC,CAAC,CAACC,QAAQ,CAAC1C,UAAU,CAACyC,WAAW,CAAC,CAAC,CAAC;EAAA,CAC9D,CAAC;;EAED;EACA,MAAME,UAAU,GAAIC,IAAI,IAAK;IAC3B,MAAMC,OAAO,GAAG;MAAEC,IAAI,EAAE,SAAS;MAAEC,KAAK,EAAE,MAAM;MAAEC,GAAG,EAAE;IAAU,CAAC;IAClE,OAAO,IAAIC,IAAI,CAACL,IAAI,CAAC,CAACM,kBAAkB,CAACC,SAAS,EAAEN,OAAO,CAAC;EAC9D,CAAC;EAED,oBACE9D,OAAA;IAAKqE,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBtE,OAAA;MAAAsE,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAGpB7D,YAAY,iBAAIb,OAAA;MAAKqE,SAAS,EAAC,cAAc;MAAAC,QAAA,EAAEzD;IAAY;MAAA0D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAGnE1E,OAAA;MAAM2E,QAAQ,EAAE1C,YAAa;MAAAqC,QAAA,gBAC3BtE,OAAA;QAAAsE,QAAA,EAAK3D,UAAU,GAAG,WAAW,GAAG;MAAU;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAChD1E,OAAA;QACE4E,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,OAAO;QACnBC,KAAK,EAAE3E,KAAM;QACb4E,QAAQ,EAAG7C,CAAC,IAAK9B,QAAQ,CAAC8B,CAAC,CAAC8C,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC,eACF1E,OAAA;QACE4E,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,aAAa;QACzBC,KAAK,EAAEzE,WAAY;QACnB0E,QAAQ,EAAG7C,CAAC,IAAK5B,cAAc,CAAC4B,CAAC,CAAC8C,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACF1E,OAAA;QACE4E,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,UAAU;QACtBC,KAAK,EAAEvE,OAAQ;QACfwE,QAAQ,EAAG7C,CAAC,IAAK1B,UAAU,CAAC0B,CAAC,CAAC8C,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eAGF1E,OAAA;QACE8E,KAAK,EAAEzD,YAAa;QACpB0D,QAAQ,EAAG7C,CAAC,IAAKZ,eAAe,CAACY,CAAC,CAAC8C,MAAM,CAACF,KAAK,CAAE;QACjDG,QAAQ;QAAAX,QAAA,gBAERtE,OAAA;UAAQ8E,KAAK,EAAC,EAAE;UAAAR,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EACtCvD,KAAK,CAACqB,GAAG,CAAEW,IAAI,iBACdnD,OAAA;UAAuB8E,KAAK,EAAE3B,IAAI,CAACb,GAAI;UAAAgC,QAAA,EACpCnB,IAAI,CAAC+B;QAAI,GADC/B,IAAI,CAACb,GAAG;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAET1E,OAAA;QAAQ4E,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAE3D,UAAU,GAAG,aAAa,GAAG;MAAU;QAAA4D,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpE,CAAC,eAGP1E,OAAA;MAAKqE,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3BtE,OAAA;QACE4E,IAAI,EAAC,MAAM;QACXC,WAAW,EAAC,iBAAiB;QAC7BC,KAAK,EAAE7D,UAAW;QAClB8D,QAAQ,EAAG7C,CAAC,IAAKhB,aAAa,CAACgB,CAAC,CAAC8C,MAAM,CAACF,KAAK;MAAE;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACF1E,OAAA;QAAQ8E,KAAK,EAAE/D,MAAO;QAACgE,QAAQ,EAAG7C,CAAC,IAAKlB,SAAS,CAACkB,CAAC,CAAC8C,MAAM,CAACF,KAAK,CAAE;QAAAR,QAAA,gBAChEtE,OAAA;UAAQ8E,KAAK,EAAC,KAAK;UAAAR,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChC1E,OAAA;UAAQ8E,KAAK,EAAC,aAAa;UAAAR,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAChD1E,OAAA;UAAQ8E,KAAK,EAAC,WAAW;UAAAR,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtC,CAAC,eAGT1E,OAAA;QACE8E,KAAK,EAAEvD,UAAW;QAClBwD,QAAQ,EAAG7C,CAAC,IAAKV,aAAa,CAACU,CAAC,CAAC8C,MAAM,CAACF,KAAK,CAAE,CAAC;QAAA;QAAAR,QAAA,gBAEhDtE,OAAA;UAAQ8E,KAAK,EAAC,EAAE;UAAAR,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAClCvD,KAAK,CAACqB,GAAG,CAAEW,IAAI,iBACdnD,OAAA;UAAuB8E,KAAK,EAAE3B,IAAI,CAACb,GAAI;UAAAgC,QAAA,EACpCnB,IAAI,CAAC+B;QAAI,GADC/B,IAAI,CAACb,GAAG;UAAAiC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eAGN1E,OAAA;MAAAsE,QAAA,EAAI;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACblB,aAAa,CAAC2B,MAAM,GAAG,CAAC,gBACvBnF,OAAA;MAAIqE,SAAS,EAAC,WAAW;MAAAC,QAAA,EACtBd,aAAa,CAAChB,GAAG,CAAEC,IAAI,iBACtBzC,OAAA;QAAmBqE,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACtCtE,OAAA;UAAAsE,QAAA,EAAS7B,IAAI,CAACtC;QAAK;UAAAoE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAS,CAAC,OAAG,EAACjC,IAAI,CAACpC,WAAW,EAAC,KAAG,EAACoC,IAAI,CAACI,MAAM,EAAC,UAAQ,EAACJ,IAAI,CAAClC,OAAO,GAAGqD,UAAU,CAACnB,IAAI,CAAClC,OAAO,CAAC,GAAG,KAAK,eAC1HP,OAAA;UAAKqE,SAAS,EAAC,cAAc;UAAAC,QAAA,gBAC3BtE,OAAA;YAAQoF,OAAO,EAAEA,CAAA,KAAMzC,gBAAgB,CAACF,IAAI,CAAE;YAAA6B,QAAA,GAAC,UACrC,EAAC7B,IAAI,CAACI,MAAM,KAAK,aAAa,GAAG,WAAW,GAAG,aAAa;UAAA;YAAA0B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9D,CAAC,eACT1E,OAAA;YAAQoF,OAAO,EAAEA,CAAA,KAAMlC,UAAU,CAACT,IAAI,CAAE;YAAA6B,QAAA,EAAC;UAAI;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACtD1E,OAAA;YAAQoF,OAAO,EAAEA,CAAA,KAAMhC,YAAY,CAACX,IAAI,CAACH,GAAG,CAAE;YAAAgC,QAAA,EAAC;UAAM;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3D,CAAC;MAAA,GARCjC,IAAI,CAACH,GAAG;QAAAiC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OASb,CACL;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC,gBAEL1E,OAAA;MAAAsE,QAAA,EAAG;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAC1B;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxE,EAAA,CAlPID,GAAG;AAAAoF,EAAA,GAAHpF,GAAG;AAoPT,eAAeA,GAAG;AAAC,IAAAoF,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}