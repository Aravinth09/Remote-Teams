{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';// Static userId\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const userId='66df023961c74851a7c06b5b';const App=()=>{const[title,setTitle]=useState('');const[description,setDescription]=useState('');const[tasks,setTasks]=useState([]);// Fetch tasks when the component loads\nuseEffect(()=>{fetchTasks();},[]);// Function to fetch tasks from the API\nconst fetchTasks=async()=>{try{// Use backticks for template literal to embed the userId in the URL\nconst response=await axios.get(`http://localhost:9000/api/users/${userId}/tasks`);setTasks(response.data);// Assuming response.data contains an array of tasks\n}catch(error){console.error('Error fetching tasks:',error);}};// Function to handle task submission\nconst handleSubmit=async e=>{e.preventDefault();if(!title||!description){alert('Please fill out both fields');return;}try{const response=await axios.post('http://localhost:9000/api/tasks',{title,description,userId// Use the predefined userId variable\n});// Update the task list with the newly added task\nsetTasks([...tasks,response.data.task]);setTitle('');// Clear the title field\nsetDescription('');// Clear the description field\n}catch(error){console.error('Error adding task:',error);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Task Manager\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Add Task\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Title\",value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Description\",value:description,onChange:e=>setDescription(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Add Task\"})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Tasks\"}),tasks.length>0?/*#__PURE__*/_jsx(\"ul\",{children:tasks.map(task=>/*#__PURE__*/_jsxs(\"li\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:task.title}),\" - \",task.description]},task._id))}):/*#__PURE__*/_jsx(\"p\",{children:\"No tasks available.\"})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","userId","App","title","setTitle","description","setDescription","tasks","setTasks","fetchTasks","response","get","data","error","console","handleSubmit","e","preventDefault","alert","post","task","className","children","onSubmit","type","placeholder","value","onChange","target","length","map","_id"],"sources":["/Users/aravinth/Backendservice/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\n// Static userId\nconst userId = '66df023961c74851a7c06b5b';\n\nconst App = () => {\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [tasks, setTasks] = useState([]);\n\n  // Fetch tasks when the component loads\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Function to fetch tasks from the API\n  const fetchTasks = async () => {\n    try {\n      // Use backticks for template literal to embed the userId in the URL\n      const response = await axios.get(`http://localhost:9000/api/users/${userId}/tasks`);\n      setTasks(response.data); // Assuming response.data contains an array of tasks\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n    }\n  };\n\n  // Function to handle task submission\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!title || !description) {\n      alert('Please fill out both fields');\n      return;\n    }\n\n    try {\n      const response = await axios.post('http://localhost:9000/api/tasks', {\n        title,\n        description,\n        userId, // Use the predefined userId variable\n      });\n\n      // Update the task list with the newly added task\n      setTasks([...tasks, response.data.task]);\n      setTitle('');  // Clear the title field\n      setDescription('');  // Clear the description field\n    } catch (error) {\n      console.error('Error adding task:', error);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Task Manager</h1>\n      <form onSubmit={handleSubmit}>\n        <h2>Add Task</h2>\n        <input\n          type=\"text\"\n          placeholder=\"Title\"\n          value={title}\n          onChange={(e) => setTitle(e.target.value)}\n        />\n        <input\n          type=\"text\"\n          placeholder=\"Description\"\n          value={description}\n          onChange={(e) => setDescription(e.target.value)}\n        />\n        <button type=\"submit\">Add Task</button>\n      </form>\n\n      <h2>Tasks</h2>\n      {tasks.length > 0 ? (\n        <ul>\n          {tasks.map((task) => (\n            <li key={task._id}>\n              <strong>{task.title}</strong> - {task.description}\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>No tasks available.</p>\n      )}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,MAAO,CAAAC,KAAK,KAAM,OAAO,CAEzB;AAAA,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBACA,KAAM,CAAAC,MAAM,CAAG,0BAA0B,CAEzC,KAAM,CAAAC,GAAG,CAAGA,CAAA,GAAM,CAChB,KAAM,CAACC,KAAK,CAAEC,QAAQ,CAAC,CAAGV,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACW,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACa,KAAK,CAAEC,QAAQ,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAEtC;AACAC,SAAS,CAAC,IAAM,CACdc,UAAU,CAAC,CAAC,CACd,CAAC,CAAE,EAAE,CAAC,CAEN;AACA,KAAM,CAAAA,UAAU,CAAG,KAAAA,CAAA,GAAY,CAC7B,GAAI,CACF;AACA,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,GAAG,CAAC,mCAAmCV,MAAM,QAAQ,CAAC,CACnFO,QAAQ,CAACE,QAAQ,CAACE,IAAI,CAAC,CAAE;AAC3B,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,CAAEA,KAAK,CAAC,CAC/C,CACF,CAAC,CAED;AACA,KAAM,CAAAE,YAAY,CAAG,KAAO,CAAAC,CAAC,EAAK,CAChCA,CAAC,CAACC,cAAc,CAAC,CAAC,CAElB,GAAI,CAACd,KAAK,EAAI,CAACE,WAAW,CAAE,CAC1Ba,KAAK,CAAC,6BAA6B,CAAC,CACpC,OACF,CAEA,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACuB,IAAI,CAAC,iCAAiC,CAAE,CACnEhB,KAAK,CACLE,WAAW,CACXJ,MAAQ;AACV,CAAC,CAAC,CAEF;AACAO,QAAQ,CAAC,CAAC,GAAGD,KAAK,CAAEG,QAAQ,CAACE,IAAI,CAACQ,IAAI,CAAC,CAAC,CACxChB,QAAQ,CAAC,EAAE,CAAC,CAAG;AACfE,cAAc,CAAC,EAAE,CAAC,CAAG;AACvB,CAAE,MAAOO,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,oBAAoB,CAAEA,KAAK,CAAC,CAC5C,CACF,CAAC,CAED,mBACEb,KAAA,QAAKqB,SAAS,CAAC,KAAK,CAAAC,QAAA,eAClBxB,IAAA,OAAAwB,QAAA,CAAI,cAAY,CAAI,CAAC,cACrBtB,KAAA,SAAMuB,QAAQ,CAAER,YAAa,CAAAO,QAAA,eAC3BxB,IAAA,OAAAwB,QAAA,CAAI,UAAQ,CAAI,CAAC,cACjBxB,IAAA,UACE0B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,OAAO,CACnBC,KAAK,CAAEvB,KAAM,CACbwB,QAAQ,CAAGX,CAAC,EAAKZ,QAAQ,CAACY,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE,CAC3C,CAAC,cACF5B,IAAA,UACE0B,IAAI,CAAC,MAAM,CACXC,WAAW,CAAC,aAAa,CACzBC,KAAK,CAAErB,WAAY,CACnBsB,QAAQ,CAAGX,CAAC,EAAKV,cAAc,CAACU,CAAC,CAACY,MAAM,CAACF,KAAK,CAAE,CACjD,CAAC,cACF5B,IAAA,WAAQ0B,IAAI,CAAC,QAAQ,CAAAF,QAAA,CAAC,UAAQ,CAAQ,CAAC,EACnC,CAAC,cAEPxB,IAAA,OAAAwB,QAAA,CAAI,OAAK,CAAI,CAAC,CACbf,KAAK,CAACsB,MAAM,CAAG,CAAC,cACf/B,IAAA,OAAAwB,QAAA,CACGf,KAAK,CAACuB,GAAG,CAAEV,IAAI,eACdpB,KAAA,OAAAsB,QAAA,eACExB,IAAA,WAAAwB,QAAA,CAASF,IAAI,CAACjB,KAAK,CAAS,CAAC,MAAG,CAACiB,IAAI,CAACf,WAAW,GAD1Ce,IAAI,CAACW,GAEV,CACL,CAAC,CACA,CAAC,cAELjC,IAAA,MAAAwB,QAAA,CAAG,qBAAmB,CAAG,CAC1B,EACE,CAAC,CAEV,CAAC,CAED,cAAe,CAAApB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}