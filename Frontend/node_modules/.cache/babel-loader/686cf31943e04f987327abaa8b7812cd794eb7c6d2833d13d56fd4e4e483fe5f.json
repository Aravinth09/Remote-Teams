{"ast":null,"code":"import axios from 'axios';\n\n// Axios instance for API requests\nconst api = axios.create({\n  baseURL: 'http://localhost:9000/api'\n});\n\n// Interceptor to add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Get all users\nexport const getUsers = async () => {\n  try {\n    const response = await api.get('/users/user');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw error;\n  }\n};\n\n// Get tasks by userId\nexport const getTasks = async userId => {\n  try {\n    const response = await api.get(`/tasks?userId=${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\n\n// Add a new task\nexport const addTask = async taskData => {\n  try {\n    const response = await api.post('/tasks', taskData);\n    return response.data;\n  } catch (error) {\n    console.error('Error adding task:', error);\n    throw error;\n  }\n};\n\n// Update a task's details\nexport const updateTask = async (taskId, updatedData) => {\n  try {\n    const response = await api.put(`/tasks/${taskId}`, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw error;\n  }\n};\n\n// Update task status\nexport const updateTaskStatus = async (taskId, status) => {\n  try {\n    const response = await api.put(`/tasks/${taskId}/status`, {\n      status\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error updating task status:', error);\n    throw error;\n  }\n};\n\n// Delete a task\nexport const deleteTask = async taskId => {\n  try {\n    const response = await api.delete(`/tasks/${taskId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting task:', error);\n    throw error;\n  }\n};\n\n// User login\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/users/login', credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error;\n  }\n};\n\n// User registration\nexport const registerUser = async userData => {\n  try {\n    const response = await api.post('/users/register', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","getUsers","response","get","data","console","getTasks","userId","addTask","taskData","post","updateTask","taskId","updatedData","put","updateTaskStatus","status","deleteTask","delete","loginUser","credentials","registerUser","userData"],"sources":["/Users/aravinth/Downloads/RemoteTeams copy/Frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Axios instance for API requests\nconst api = axios.create({\n    baseURL: 'http://localhost:9000/api',\n});\n\n// Interceptor to add token to requests if available\napi.interceptors.request.use(config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n}, error => Promise.reject(error));\n\n// Get all users\nexport const getUsers = async () => {\n    try {\n        const response = await api.get('/users/user');\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching users:', error);\n        throw error;\n    }\n};\n\n// Get tasks by userId\nexport const getTasks = async (userId) => {\n    try {\n        const response = await api.get(`/tasks?userId=${userId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching tasks:', error);\n        throw error;\n    }\n};\n\n// Add a new task\nexport const addTask = async (taskData) => {\n    try {\n        const response = await api.post('/tasks', taskData);\n        return response.data;\n    } catch (error) {\n        console.error('Error adding task:', error);\n        throw error;\n    }\n};\n\n// Update a task's details\nexport const updateTask = async (taskId, updatedData) => {\n    try {\n        const response = await api.put(`/tasks/${taskId}`, updatedData);\n        return response.data;\n    } catch (error) {\n        console.error('Error updating task:', error);\n        throw error;\n    }\n};\n\n// Update task status\nexport const updateTaskStatus = async (taskId, status) => {\n    try {\n        const response = await api.put(`/tasks/${taskId}/status`, { status });\n        return response.data;\n    } catch (error) {\n        console.error('Error updating task status:', error);\n        throw error;\n    }\n};\n\n// Delete a task\nexport const deleteTask = async (taskId) => {\n    try {\n        const response = await api.delete(`/tasks/${taskId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error deleting task:', error);\n        throw error;\n    }\n};\n\n// User login\nexport const loginUser = async (credentials) => {\n    try {\n        const response = await api.post('/users/login', credentials);\n        return response.data;\n    } catch (error) {\n        console.error('Error logging in:', error);\n        throw error;\n    }\n};\n\n// User registration\nexport const registerUser = async (userData) => {\n    try {\n        const response = await api.post('/users/register', userData);\n        return response.data;\n    } catch (error) {\n        console.error('Error registering user:', error);\n        throw error;\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}