{"ast":null,"code":"import axios from 'axios';\n\n// Axios instance for API requests\nconst api = axios.create({\n  baseURL: 'http://localhost:9000/api' // Ensure this matches your backend\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n}, error => Promise.reject(error));\n\n// Fetch users\nexport const getUsers = async () => {\n  try {\n    const response = await api.get('/users/user');\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching users:', error);\n    throw error;\n  }\n};\n\n// Fetch tasks\nexport const getTasks = async userId => {\n  try {\n    const response = await api.get(`/tasks?userId=${userId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error fetching tasks:', error);\n    throw error;\n  }\n};\n\n// Add a task\nexport const addTask = async taskData => {\n  try {\n    const response = await api.post('/tasks', {\n      title: taskData.title,\n      description: taskData.description,\n      userId: taskData.userId,\n      status: taskData.status || 'in-progress',\n      // Default status\n      dueDate: taskData.dueDate,\n      priority: taskData.priority || 'medium',\n      // Default priority\n      category: taskData.category || 'general' // Default category\n    });\n    return response.data;\n  } catch (error) {\n    console.error('Error adding task:', error);\n    throw error;\n  }\n};\n\n// Update a task\nexport const updateTask = async (taskId, updatedData) => {\n  try {\n    const response = await api.put(`/tasks/${taskId}`, updatedData);\n    return response.data;\n  } catch (error) {\n    console.error('Error updating task:', error);\n    throw error;\n  }\n};\n\n// Delete a task\nexport const deleteTask = async taskId => {\n  try {\n    const response = await api.delete(`/tasks/${taskId}`);\n    return response.data;\n  } catch (error) {\n    console.error('Error deleting task:', error);\n    throw error;\n  }\n};\n\n// User login\nexport const loginUser = async credentials => {\n  try {\n    const response = await api.post('/users/login', credentials);\n    return response.data;\n  } catch (error) {\n    console.error('Error logging in:', error);\n    throw error;\n  }\n};\n\n// Register user\nexport const registerUser = async userData => {\n  try {\n    const response = await api.post('/users/register', userData);\n    return response.data;\n  } catch (error) {\n    console.error('Error registering user:', error);\n    throw error;\n  }\n};","map":{"version":3,"names":["axios","api","create","baseURL","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","getUsers","response","get","data","console","getTasks","userId","addTask","taskData","post","title","description","status","dueDate","priority","category","updateTask","taskId","updatedData","put","deleteTask","delete","loginUser","credentials","registerUser","userData"],"sources":["/Users/aravinth/Downloads/RemoteTeamusers priority copy/Frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Axios instance for API requests\nconst api = axios.create({\n    baseURL: 'http://localhost:9000/api',  // Ensure this matches your backend\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n}, error => Promise.reject(error));\n\n// Fetch users\nexport const getUsers = async () => {\n    try {\n        const response = await api.get('/users/user');\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching users:', error);\n        throw error;\n    }\n};\n\n// Fetch tasks\nexport const getTasks = async (userId) => {\n    try {\n        const response = await api.get(`/tasks?userId=${userId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error fetching tasks:', error);\n        throw error;\n    }\n};\n\n// Add a task\nexport const addTask = async (taskData) => {\n    try {\n        const response = await api.post('/tasks', {\n            title: taskData.title,\n            description: taskData.description,\n            userId: taskData.userId,\n            status: taskData.status || 'in-progress',  // Default status\n            dueDate: taskData.dueDate,\n            priority: taskData.priority || 'medium',  // Default priority\n            category: taskData.category || 'general',  // Default category\n        });\n        return response.data;\n    } catch (error) {\n        console.error('Error adding task:', error);\n        throw error;\n    }\n};\n\n// Update a task\nexport const updateTask = async (taskId, updatedData) => {\n    try {\n        const response = await api.put(`/tasks/${taskId}`, updatedData);\n        return response.data;\n    } catch (error) {\n        console.error('Error updating task:', error);\n        throw error;\n    }\n};\n\n// Delete a task\nexport const deleteTask = async (taskId) => {\n    try {\n        const response = await api.delete(`/tasks/${taskId}`);\n        return response.data;\n    } catch (error) {\n        console.error('Error deleting task:', error);\n        throw error;\n    }\n};\n\n// User login\nexport const loginUser = async (credentials) => {\n    try {\n        const response = await api.post('/users/login', credentials);\n        return response.data;\n    } catch (error) {\n        console.error('Error logging in:', error);\n        throw error;\n    }\n};\n\n// Register user\nexport const registerUser = async (userData) => {\n    try {\n        const response = await api.post('/users/register', userData);\n        return response.data;\n    } catch (error) {\n        console.error('Error registering user:', error);\n        throw error;\n    }\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}