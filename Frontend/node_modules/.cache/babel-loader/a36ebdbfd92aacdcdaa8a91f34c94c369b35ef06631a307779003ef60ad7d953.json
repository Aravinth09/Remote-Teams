{"ast":null,"code":"import axios from'axios';// Axios instance for API requests\nconst api=axios.create({baseURL:'http://localhost:9000/api'});export const getUsers=async()=>{return await api.get('/users/user');};// Add token to requests if available\napi.interceptors.request.use(config=>{const token=localStorage.getItem('token');if(token){config.headers.Authorization=`Bearer ${token}`;}return config;},error=>Promise.reject(error));export const getTasks=userId=>api.get(`/tasks?userId=${userId}`);export const addTask=taskData=>api.post('/tasks',{...taskData,priority:taskData.priority,category:taskData.category});export const updateTask=(taskId,updatedData)=>api.put(`/tasks/${taskId}`,updatedData);export const deleteTask=taskId=>api.delete(`/tasks/${taskId}`);export const loginUser=credentials=>api.post('/users/login',credentials);export const registerUser=userData=>api.post('/users/register',userData);","map":{"version":3,"names":["axios","api","create","baseURL","getUsers","get","interceptors","request","use","config","token","localStorage","getItem","headers","Authorization","error","Promise","reject","getTasks","userId","addTask","taskData","post","priority","category","updateTask","taskId","updatedData","put","deleteTask","delete","loginUser","credentials","registerUser","userData"],"sources":["/Users/aravinth/Downloads/RemoteTeamusers copy/Frontend/src/api.js"],"sourcesContent":["import axios from 'axios';\n\n// Axios instance for API requests\nconst api = axios.create({\n    baseURL: 'http://localhost:9000/api',\n});\n\nexport const getUsers = async () => {\n    return await api.get('/users/user');\n};\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n    const token = localStorage.getItem('token');\n    if (token) {\n        config.headers.Authorization = `Bearer ${token}`;\n    }\n    return config;\n}, error => Promise.reject(error));\n\nexport const getTasks = (userId) => api.get(`/tasks?userId=${userId}`);\nexport const addTask = (taskData) => api.post('/tasks', { ...taskData, priority: taskData.priority, category: taskData.category });\nexport const updateTask = (taskId, updatedData) => api.put(`/tasks/${taskId}`, updatedData);\nexport const deleteTask = (taskId) => api.delete(`/tasks/${taskId}`);\nexport const loginUser = (credentials) => api.post('/users/login', credentials);\nexport const registerUser = (userData) => api.post('/users/register', userData);\n\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CAEzB;AACA,KAAM,CAAAC,GAAG,CAAGD,KAAK,CAACE,MAAM,CAAC,CACrBC,OAAO,CAAE,2BACb,CAAC,CAAC,CAEF,MAAO,MAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAA,GAAY,CAChC,MAAO,MAAM,CAAAH,GAAG,CAACI,GAAG,CAAC,aAAa,CAAC,CACvC,CAAC,CAED;AACAJ,GAAG,CAACK,YAAY,CAACC,OAAO,CAACC,GAAG,CAACC,MAAM,EAAI,CACnC,KAAM,CAAAC,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACPD,MAAM,CAACI,OAAO,CAACC,aAAa,CAAG,UAAUJ,KAAK,EAAE,CACpD,CACA,MAAO,CAAAD,MAAM,CACjB,CAAC,CAAEM,KAAK,EAAIC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAAC,CAElC,MAAO,MAAM,CAAAG,QAAQ,CAAIC,MAAM,EAAKlB,GAAG,CAACI,GAAG,CAAC,iBAAiBc,MAAM,EAAE,CAAC,CACtE,MAAO,MAAM,CAAAC,OAAO,CAAIC,QAAQ,EAAKpB,GAAG,CAACqB,IAAI,CAAC,QAAQ,CAAE,CAAE,GAAGD,QAAQ,CAAEE,QAAQ,CAAEF,QAAQ,CAACE,QAAQ,CAAEC,QAAQ,CAAEH,QAAQ,CAACG,QAAS,CAAC,CAAC,CAClI,MAAO,MAAM,CAAAC,UAAU,CAAGA,CAACC,MAAM,CAAEC,WAAW,GAAK1B,GAAG,CAAC2B,GAAG,CAAC,UAAUF,MAAM,EAAE,CAAEC,WAAW,CAAC,CAC3F,MAAO,MAAM,CAAAE,UAAU,CAAIH,MAAM,EAAKzB,GAAG,CAAC6B,MAAM,CAAC,UAAUJ,MAAM,EAAE,CAAC,CACpE,MAAO,MAAM,CAAAK,SAAS,CAAIC,WAAW,EAAK/B,GAAG,CAACqB,IAAI,CAAC,cAAc,CAAEU,WAAW,CAAC,CAC/E,MAAO,MAAM,CAAAC,YAAY,CAAIC,QAAQ,EAAKjC,GAAG,CAACqB,IAAI,CAAC,iBAAiB,CAAEY,QAAQ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}