{"ast":null,"code":"import React,{useState,useEffect}from'react';import{getTasks,addTask,updateTask,deleteTask,loginUser,getUsers}from'./api';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const App=()=>{const[title,setTitle]=useState('');const[description,setDescription]=useState('');const[dueDate,setDueDate]=useState('');const[tasks,setTasks]=useState([]);const[taskToEdit,setTaskToEdit]=useState(null);const[notification,setNotification]=useState('');const[filter,setFilter]=useState('all');const[searchTerm,setSearchTerm]=useState('');const[users,setUsers]=useState([]);const[selectedUser,setSelectedUser]=useState('');const[filterUser,setFilterUser]=useState('');const[isLoggedIn,setIsLoggedIn]=useState(!!localStorage.getItem('token'));// Check if token exists\nconst[email,setEmail]=useState('');const[password,setPassword]=useState('');useEffect(()=>{if(isLoggedIn){fetchTasks();fetchUsers();}},[filterUser,isLoggedIn]);const fetchTasks=async()=>{try{const res=await getTasks(filterUser);setTasks(res.data);}catch(error){setNotification('Error fetching tasks.');}};// Fetch users\nconst fetchUsers=async()=>{try{const res=await getUsers();// Fetch the users from the backend\nsetUsers(res.data);// Set users in state\n}catch(error){setNotification('Error fetching users.');}};const handleLogin=async()=>{try{const res=await loginUser({email,password});const{token}=res.data;localStorage.setItem('token',token);setIsLoggedIn(true);setNotification('Logged in successfully.');}catch(error){setNotification('Login failed. Please check your credentials.');}};const handleLogout=()=>{localStorage.removeItem('token');// Clear token\nsetIsLoggedIn(false);// Set login status to false\nsetNotification('Logged out successfully.');};const handleSubmit=async e=>{e.preventDefault();if(!title||!description||!dueDate||!selectedUser){alert('Please fill out all fields');return;}try{if(taskToEdit){const res=await updateTask(taskToEdit._id,{title,description,dueDate,userId:selectedUser});setTasks(tasks.map(task=>task._id===res.data._id?res.data:task));setTaskToEdit(null);setNotification('Task updated successfully.');}else{const res=await addTask({title,description,dueDate,userId:selectedUser});setTasks([...tasks,res.data]);setNotification('Task added successfully.');}setTitle('');setDescription('');setDueDate('');setSelectedUser('');}catch(error){setNotification('Error adding/updating task.');}};const handleDelete=async taskId=>{try{await deleteTask(taskId);setTasks(tasks.filter(task=>task._id!==taskId));setNotification('Task deleted successfully.');}catch(error){setNotification('Error deleting task.');}};const handleEdit=task=>{setTaskToEdit(task);setTitle(task.title);setDescription(task.description);setDueDate(task.dueDate);setSelectedUser(task.user);};const filteredTasks=tasks.filter(task=>{if(filter==='all')return true;return task.status===filter;});const searchedTasks=filteredTasks.filter(task=>{var _task$title;return(_task$title=task.title)===null||_task$title===void 0?void 0:_task$title.toLowerCase().includes(searchTerm.toLowerCase());});if(!isLoggedIn){return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Login\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogin,children:\"Login\"}),notification&&/*#__PURE__*/_jsx(\"div\",{className:\"notification\",children:notification})]});}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Remote Teams\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleLogout,className:\"logout-button\",children:\"Logout\"}),notification&&/*#__PURE__*/_jsx(\"div\",{className:\"notification\",children:notification}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"h2\",{children:taskToEdit?'Edit Task':'Add Task'}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Title\",value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Description\",value:description,onChange:e=>setDescription(e.target.value)}),/*#__PURE__*/_jsx(\"input\",{type:\"date\",placeholder:\"Due Date\",value:dueDate,onChange:e=>setDueDate(e.target.value)}),/*#__PURE__*/_jsxs(\"select\",{value:selectedUser,onChange:e=>setSelectedUser(e.target.value),required:true,children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"Select a User\"}),users.map(user=>/*#__PURE__*/_jsx(\"option\",{value:user._id,children:user.name},user._id))]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:taskToEdit?'Update Task':'Add Task'})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"task-filters\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Search by title\",value:searchTerm,onChange:e=>setSearchTerm(e.target.value)}),/*#__PURE__*/_jsxs(\"select\",{value:filter,onChange:e=>setFilter(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"all\",children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{value:\"in-progress\",children:\"In Progress\"}),/*#__PURE__*/_jsx(\"option\",{value:\"completed\",children:\"Completed\"})]}),/*#__PURE__*/_jsxs(\"select\",{value:filterUser,onChange:e=>setFilterUser(e.target.value),children:[/*#__PURE__*/_jsx(\"option\",{value:\"\",children:\"All Users\"}),users.map(user=>/*#__PURE__*/_jsx(\"option\",{value:user._id,children:user.name},user._id))]})]}),/*#__PURE__*/_jsx(\"h2\",{children:\"Tasks\"}),searchedTasks.length>0?/*#__PURE__*/_jsx(\"ul\",{className:\"task-list\",children:searchedTasks.map(task=>/*#__PURE__*/_jsxs(\"li\",{className:\"task-item\",children:[/*#__PURE__*/_jsx(\"strong\",{children:task.title}),\" - \",task.description,\" - \",task.status,\" - Due: \",new Date(task.dueDate).toLocaleDateString(),/*#__PURE__*/_jsxs(\"div\",{className:\"task-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleEdit(task),children:\"Edit\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleDelete(task._id),children:\"Delete\"})]})]},task._id))}):/*#__PURE__*/_jsx(\"p\",{children:\"No tasks available.\"})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","getTasks","addTask","updateTask","deleteTask","loginUser","getUsers","jsx","_jsx","jsxs","_jsxs","App","title","setTitle","description","setDescription","dueDate","setDueDate","tasks","setTasks","taskToEdit","setTaskToEdit","notification","setNotification","filter","setFilter","searchTerm","setSearchTerm","users","setUsers","selectedUser","setSelectedUser","filterUser","setFilterUser","isLoggedIn","setIsLoggedIn","localStorage","getItem","email","setEmail","password","setPassword","fetchTasks","fetchUsers","res","data","error","handleLogin","token","setItem","handleLogout","removeItem","handleSubmit","e","preventDefault","alert","_id","userId","map","task","handleDelete","taskId","handleEdit","user","filteredTasks","status","searchedTasks","_task$title","toLowerCase","includes","className","children","type","placeholder","value","onChange","target","onClick","onSubmit","required","name","length","Date","toLocaleDateString"],"sources":["/Users/aravinth/Downloads/RemoteTeamusers copy/Frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getTasks, addTask, updateTask, deleteTask, loginUser, getUsers } from './api';\nimport './App.css';\n\nconst App = () => {\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [dueDate, setDueDate] = useState('');\n    const [tasks, setTasks] = useState([]);\n    const [taskToEdit, setTaskToEdit] = useState(null);\n    const [notification, setNotification] = useState('');\n    const [filter, setFilter] = useState('all');\n    const [searchTerm, setSearchTerm] = useState('');\n    const [users, setUsers] = useState([]);\n    const [selectedUser, setSelectedUser] = useState('');\n    const [filterUser, setFilterUser] = useState('');\n    const [isLoggedIn, setIsLoggedIn] = useState(!!localStorage.getItem('token'));  // Check if token exists\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n\n    useEffect(() => {\n        if (isLoggedIn) {\n            fetchTasks();\n            fetchUsers();\n        }\n    }, [filterUser, isLoggedIn]);\n\n    const fetchTasks = async () => {\n        try {\n            const res = await getTasks(filterUser);\n            setTasks(res.data);\n        } catch (error) {\n            setNotification('Error fetching tasks.');\n        }\n    };\n\n     // Fetch users\n     const fetchUsers = async () => {\n      try {\n        \n          const res = await getUsers();  // Fetch the users from the backend\n          setUsers(res.data);  // Set users in state\n      } catch (error) {\n          setNotification('Error fetching users.');\n      }\n  };\n\n\n    const handleLogin = async () => {\n        try {\n            const res = await loginUser({ email, password });\n            const { token } = res.data;\n            localStorage.setItem('token', token);\n            setIsLoggedIn(true);\n            setNotification('Logged in successfully.');\n        } catch (error) {\n            setNotification('Login failed. Please check your credentials.');\n        }\n    };\n\n    const handleLogout = () => {\n        localStorage.removeItem('token');  // Clear token\n        setIsLoggedIn(false);  // Set login status to false\n        setNotification('Logged out successfully.');\n    };\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n        if (!title || !description || !dueDate || !selectedUser) {\n            alert('Please fill out all fields');\n            return;\n        }\n\n        try {\n            if (taskToEdit) {\n                const res = await updateTask(taskToEdit._id, { title, description, dueDate, userId: selectedUser });\n                setTasks(tasks.map(task => task._id === res.data._id ? res.data : task));\n                setTaskToEdit(null);\n                setNotification('Task updated successfully.');\n            } else {\n                const res = await addTask({ title, description, dueDate, userId: selectedUser });\n                setTasks([...tasks, res.data]);\n                setNotification('Task added successfully.');\n            }\n\n            setTitle('');\n            setDescription('');\n            setDueDate('');\n            setSelectedUser('');\n        } catch (error) {\n            setNotification('Error adding/updating task.');\n        }\n    };\n\n    const handleDelete = async (taskId) => {\n        try {\n            await deleteTask(taskId);\n            setTasks(tasks.filter(task => task._id !== taskId));\n            setNotification('Task deleted successfully.');\n        } catch (error) {\n            setNotification('Error deleting task.');\n        }\n    };\n\n    const handleEdit = (task) => {\n        setTaskToEdit(task);\n        setTitle(task.title);\n        setDescription(task.description);\n        setDueDate(task.dueDate);\n        setSelectedUser(task.user);\n    };\n\n    const filteredTasks = tasks.filter(task => {\n        if (filter === 'all') return true;\n        return task.status === filter;\n    });\n\n    const searchedTasks = filteredTasks.filter(task =>\n        task.title?.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n\n    if (!isLoggedIn) {\n        return (\n            <div className=\"App\">\n                <h1>Login</h1>\n                <input\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    value={email}\n                    onChange={(e) => setEmail(e.target.value)}\n                />\n                <input\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    value={password}\n                    onChange={(e) => setPassword(e.target.value)}\n                />\n                <button onClick={handleLogin}>Login</button>\n                {notification && <div className=\"notification\">{notification}</div>}\n            </div>\n        );\n    }\n\n    return (\n        <div className=\"App\">\n            <h1>Remote Teams</h1>\n\n            {/* Logout Button */}\n            <button onClick={handleLogout} className=\"logout-button\">\n                Logout\n            </button>\n\n            {notification && <div className=\"notification\">{notification}</div>}\n\n            <form onSubmit={handleSubmit}>\n                <h2>{taskToEdit ? 'Edit Task' : 'Add Task'}</h2>\n                <input\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Description\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                />\n                <input\n                    type=\"date\"\n                    placeholder=\"Due Date\"\n                    value={dueDate}\n                    onChange={(e) => setDueDate(e.target.value)}\n                />\n                <select\n                    value={selectedUser}\n                    onChange={(e) => setSelectedUser(e.target.value)}\n                    required\n                >\n                    <option value=\"\">Select a User</option>\n                    {users.map((user) => (\n                        <option key={user._id} value={user._id}>\n                            {user.name}\n                        </option>\n                    ))}\n                </select>\n                <button type=\"submit\">{taskToEdit ? 'Update Task' : 'Add Task'}</button>\n            </form>\n\n            <div className=\"task-filters\">\n                <input\n                    type=\"text\"\n                    placeholder=\"Search by title\"\n                    value={searchTerm}\n                    onChange={(e) => setSearchTerm(e.target.value)}\n                />\n                <select value={filter} onChange={(e) => setFilter(e.target.value)}>\n                    <option value=\"all\">All</option>\n                    <option value=\"in-progress\">In Progress</option>\n                    <option value=\"completed\">Completed</option>\n                </select>\n                <select\n                    value={filterUser}\n                    onChange={(e) => setFilterUser(e.target.value)}\n                >\n                    <option value=\"\">All Users</option>\n                    {users.map((user) => (\n                        <option key={user._id} value={user._id}>\n                            {user.name}\n                        </option>\n                    ))}\n                </select>\n            </div>\n\n            <h2>Tasks</h2>\n            {searchedTasks.length > 0 ? (\n                <ul className=\"task-list\">\n                    {searchedTasks.map((task) => (\n                        <li key={task._id} className=\"task-item\">\n                            <strong>{task.title}</strong> - {task.description} - {task.status} - Due: {new Date(task.dueDate).toLocaleDateString()}\n                            <div className=\"task-actions\">\n                                <button onClick={() => handleEdit(task)}>Edit</button>\n                                <button onClick={() => handleDelete(task._id)}>Delete</button>\n                            </div>\n                        </li>\n                    ))}\n                </ul>\n            ) : (\n                <p>No tasks available.</p>\n            )}\n        </div>\n    );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}