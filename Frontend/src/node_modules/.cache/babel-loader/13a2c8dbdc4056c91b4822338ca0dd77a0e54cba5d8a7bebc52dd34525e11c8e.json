{"ast":null,"code":"var _jsxFileName = \"/Users/aravinth/Backendservice/Frontend/src/task-manager/src/TaskManager.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TaskManager = ({\n  userId\n}) => {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n  const [status, setStatus] = useState('all'); // For filtering tasks\n  const [error, setError] = useState('');\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n\n  // Fetch tasks from the server\n  const fetchTasks = async () => {\n    try {\n      const res = await axios.get(`http://localhost:9000/api/users/${userId}/tasks`);\n      setTasks(res.data);\n    } catch (error) {\n      console.error('Error fetching tasks:', error);\n      setError('Failed to load tasks');\n    }\n  };\n\n  // Add a new task\n  const addTask = async () => {\n    if (!title || !description) {\n      setError('Title and description are required');\n      return;\n    }\n    try {\n      await axios.post('http://localhost:9000/api/tasks', {\n        title,\n        description,\n        status: 'in-progress',\n        // Default task status\n        userId\n      });\n      setTitle(''); // Reset title field\n      setDescription(''); // Reset description field\n      fetchTasks(); // Refresh the tasks list\n      setError(''); // Clear any previous error\n    } catch (error) {\n      console.error('Error adding task:', error);\n      setError('Failed to add task');\n    }\n  };\n\n  // Delete a task\n  const deleteTask = async taskId => {\n    try {\n      await axios.delete(`http://localhost:9000/api/tasks/${taskId}`);\n      fetchTasks(); // Refresh the tasks list\n    } catch (error) {\n      console.error('Error deleting task:', error);\n      setError('Failed to delete task');\n    }\n  };\n\n  // Update a task's status\n  const updateTaskStatus = async (taskId, newStatus) => {\n    try {\n      await axios.put(`http://localhost:9000/api/tasks/${taskId}`, {\n        status: newStatus\n      });\n      fetchTasks(); // Refresh tasks after updating the status\n    } catch (error) {\n      console.error('Error updating task status:', error);\n      setError('Failed to update task status');\n    }\n  };\n\n  // Filter tasks based on status\n  const filterTasks = () => {\n    if (status === 'all') {\n      return tasks;\n    } else {\n      return tasks.filter(task => task.status === status);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Title\",\n        value: title,\n        onChange: e => setTitle(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Description\",\n        value: description,\n        onChange: e => setDescription(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addTask,\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStatus('all'),\n        children: \"All Tasks\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStatus('in-progress'),\n        children: \"In Progress\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setStatus('completed'),\n        children: \"Completed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: filterTasks().map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: task.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Status: \", task.status]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 25\n        }, this), task.status === 'in-progress' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => updateTaskStatus(task._id, 'completed'),\n          children: \"Mark as Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task._id),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 25\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n};\n_s(TaskManager, \"fyJMAcWblNjQAvjChMqgSMJEd/I=\");\n_c = TaskManager;\nexport default TaskManager;\nvar _c;\n$RefreshReg$(_c, \"TaskManager\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TaskManager","userId","_s","tasks","setTasks","title","setTitle","description","setDescription","status","setStatus","error","setError","fetchTasks","res","get","data","console","addTask","post","deleteTask","taskId","delete","updateTaskStatus","newStatus","put","filterTasks","filter","task","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","type","placeholder","value","onChange","e","target","onClick","map","_id","_c","$RefreshReg$"],"sources":["/Users/aravinth/Backendservice/Frontend/src/task-manager/src/TaskManager.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst TaskManager = ({ userId }) => {\n    const [tasks, setTasks] = useState([]);\n    const [title, setTitle] = useState('');\n    const [description, setDescription] = useState('');\n    const [status, setStatus] = useState('all'); // For filtering tasks\n    const [error, setError] = useState('');\n\n    useEffect(() => {\n        fetchTasks();\n    }, []);\n\n    // Fetch tasks from the server\n    const fetchTasks = async () => {\n        try {\n            const res = await axios.get(`http://localhost:9000/api/users/${userId}/tasks`);\n            setTasks(res.data);\n        } catch (error) {\n            console.error('Error fetching tasks:', error);\n            setError('Failed to load tasks');\n        }\n    };\n\n    // Add a new task\n    const addTask = async () => {\n        if (!title || !description) {\n            setError('Title and description are required');\n            return;\n        }\n\n        try {\n            await axios.post('http://localhost:9000/api/tasks', {\n                title,\n                description,\n                status: 'in-progress',  // Default task status\n                userId,\n            });\n            setTitle('');  // Reset title field\n            setDescription('');  // Reset description field\n            fetchTasks(); // Refresh the tasks list\n            setError('');  // Clear any previous error\n        } catch (error) {\n            console.error('Error adding task:', error);\n            setError('Failed to add task');\n        }\n    };\n\n    // Delete a task\n    const deleteTask = async (taskId) => {\n        try {\n            await axios.delete(`http://localhost:9000/api/tasks/${taskId}`);\n            fetchTasks(); // Refresh the tasks list\n        } catch (error) {\n            console.error('Error deleting task:', error);\n            setError('Failed to delete task');\n        }\n    };\n\n    // Update a task's status\n    const updateTaskStatus = async (taskId, newStatus) => {\n        try {\n            await axios.put(`http://localhost:9000/api/tasks/${taskId}`, {\n                status: newStatus\n            });\n            fetchTasks(); // Refresh tasks after updating the status\n        } catch (error) {\n            console.error('Error updating task status:', error);\n            setError('Failed to update task status');\n        }\n    };\n\n    // Filter tasks based on status\n    const filterTasks = () => {\n        if (status === 'all') {\n            return tasks;\n        } else {\n            return tasks.filter((task) => task.status === status);\n        }\n    };\n\n    return (\n        <div>\n            <h2>Task Manager</h2>\n\n            {/* Error message */}\n            {error && <p style={{ color: 'red' }}>{error}</p>}\n\n            {/* Input fields to add a task */}\n            <div>\n                <input\n                    type=\"text\"\n                    placeholder=\"Title\"\n                    value={title}\n                    onChange={(e) => setTitle(e.target.value)}\n                />\n                <input\n                    type=\"text\"\n                    placeholder=\"Description\"\n                    value={description}\n                    onChange={(e) => setDescription(e.target.value)}\n                />\n                <button onClick={addTask}>Add Task</button>\n            </div>\n\n            {/* Filter buttons */}\n            <div>\n                <button onClick={() => setStatus('all')}>All Tasks</button>\n                <button onClick={() => setStatus('in-progress')}>In Progress</button>\n                <button onClick={() => setStatus('completed')}>Completed</button>\n            </div>\n\n            {/* Display filtered tasks */}\n            <ul>\n                {filterTasks().map((task) => (\n                    <li key={task._id}>\n                        <h3>{task.title}</h3>\n                        <p>{task.description}</p>\n                        <p>Status: {task.status}</p>\n\n                        {/* Task actions */}\n                        {task.status === 'in-progress' && (\n                            <button onClick={() => updateTaskStatus(task._id, 'completed')}>Mark as Completed</button>\n                        )}\n                        <button onClick={() => deleteTask(task._id)}>Delete</button>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default TaskManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}